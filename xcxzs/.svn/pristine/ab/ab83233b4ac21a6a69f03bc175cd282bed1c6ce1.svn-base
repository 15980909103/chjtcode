<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="maximum-scale=1.0,minimum-scale=1.0,user-scalable=0,width=device-width,initial-scale=1.0"/>
    <meta name="format-detection" content="telephone=no,email=no,date=no,address=no">
    <title>意见反馈</title>
    <!-- <link rel="stylesheet" type="text/css" href="../../static/css/aui.css" /> -->
    <link rel="stylesheet" type="text/css" href="../../static/mui/css/mui.min.css" />
    <link rel="stylesheet" type="text/css" href="../../static/css/me/feedback.css" />
    <script type="text/javascript" src="../../static/js/jquery-2.0.0.min.js" ></script>
    <script type="text/javascript" src="../../static/mui/js/mui.min.js" ></script>
    <script type="text/javascript" src="../../static/js/vue.min.js" ></script>
    <script type="text/javascript" src="../../static/js/vue-tap.js" ></script>
    <script type="text/javascript" src="../../static/js/public.js?v=2" ></script>
</head>
<body>
<div id="app" class="my-content">
    <div id='my-feedback'>
        <div class='my-contact'>
            <div class='contact1'>联系方式 <span>*</span></div>
            <div class='contact2'><input type="number" placeholder="请输入联系手机号" v-model="feedbackText" /></div>
        </div>
        <div class='my-title2'>问题和建议</div>
        <div class='my-ta-content'>
            <textarea class='my-textarea' placeholder="简要描述您要反馈的问题和建议" maxlength="100" v-model="textareaText"></textarea>
            <div class='my-num' v-cloak>{{textareaText.length}}/100</div>
        </div>
        <div class='my-title'>
            <div class='title1'>图片<span>(选填、提交问题的截图)</span></div>
            <div class='title2' v-cloak>{{feedbackimg.length}}/4</div>
        </div>
        <div class='my-scroll'>
            <div class='my-scroll-content' :style="'width:'+feedbackWidth+'vw'">
                <div class='my-image-view' v-for="(item,index) in feedbackimg">
                    <img class='image' :src="item.file.src"/>
                    <img class='close' src="../../static/image/close.png" v-tap="{methods:onCloseImage,index:index}"/>
                </div>
                <img class='image' src="../../static/image/upload.png" v-tap="{methods:chooseType}"/>
            </div>
        </div>
        <div class='my-btn-success' v-tap="{methods:onSave}" v-show="isOriginHei">保存</div>
        <input @change="fileChange($event)" type="file" id="upload_file" style="display: none;"/>
    </div>
</div>
</body>
</html>
<script>
    new Vue({
        el: '#app',
        data: {
            textareaText: "",  //文本框内容
            feedbackText: "",  //联系方式内容
            feedbackWidth:'35', //图片组宽度
            feedbackimg:[],   //反馈上传的图片路径
            limit:4, //限制图片上传的数量

            defaultHeight: '0',                         //默认屏幕高度
            nowHeight:  '0',                            //实时屏幕高度
            isOriginHei : true,                         // 这个属性是固定定位按钮的显隐开关
        },
        mounted: function () {
            this.$nextTick(function () {
                this.setFeedbackWidth();
            })
            //处理软键盘弹出底部固定定位按钮顶起问题
            this.defaultHeight = document.body.clientHeight;
            let self = this
            window.onresize = () => {
                return (() => {
                    self.nowHeight= document.body.clientHeight
                })()
            }
        },
        watch: {
            nowHeight (val) {
                // 判断软键盘弹出，收起
                if(this.defaultHeight != this.nowHeight){
                    //键盘弹出操作
                    this.isOriginHei = false
                }else{
                    //键盘不弹出操作
                    this.isOriginHei = true
                }
            }
        },
        beforeDestroy () {
            window.onresize = null;     //注销window.onresize事件
        },
        methods:{
            //设置图片组宽度
            setFeedbackWidth(){
                this.feedbackWidth=(this.feedbackimg.length+1)*35;
            },
            chooseType() {
                document.getElementById('upload_file').click();
            },
            fileChange(el) {
                if (!el.target.files[0].size) return;
                this.fileList(el.target);
                el.target.value = ''
            },
            fileList(fileList) {
                let files = fileList.files;
                for (let i = 0; i < files.length; i++) {
                    //判断是否为文件夹
                    if (files[i].type != '') {
                        this.fileAdd(files[i]);
                    } else {
                        //文件夹处理
                        this.folders(fileList.items[i]);
                    }
                }
            },
            //文件夹处理
            folders(files) {
                let _this = this;
                //判断是否为原生file
                if (files.kind) {
                    files = files.webkitGetAsEntry();
                }
                files.createReader().readEntries(function (file) {
                    for (let i = 0; i < file.length; i++) {
                        if (file[i].isFile) {
                            _this.foldersAdd(file[i]);
                        } else {
                            _this.folders(file[i]);
                        }
                    }
                });
            },
            foldersAdd(entry) {
                let _this = this;
                entry.file(function (file) {
                    _this.fileAdd(file)
                })
            },
            fileAdd(file) {
                if (this.limit !== undefined) this.limit--;
                if (this.limit !== undefined && this.limit < 0){
                    mui.toast('最多只能上传4张图片');
                    return false;
                }
                //总大小
                this.size = this.size + file.size;
                //判断是否为图片文件
                if (file.type.indexOf('image') == -1) {
                    mui.toast('请选择图片文件');
                } else {
                    let reader = new FileReader();
                    let image = new Image();
                    let _this = this;
                    var feedbackimg=_this.feedbackimg;
                    var feedbackimgLength=feedbackimg.length;
                    reader.readAsDataURL(file);
                    reader.onload = function () {
                        file.src = this.result;
                        image.onload = function(){
                            let width = image.width;
                            let height = image.height;
                            file.width = width;
                            file.height = height;
                            _this.$set(_this.feedbackimg,feedbackimgLength,{file});
                            _this.setFeedbackWidth();
                        };
                        image.src= file.src;
                    }
                }
            },
            onCloseImage(event) {
                var _this=this;
                mui.confirm('删除图片？', '提示', ['确认', '取消'], function(e) {
                    if (e.index == 0) {
                        _this.feedbackimg.splice(event.index, 1);
                        if (_this.limit !== undefined) _this.limit = 4-_this.feedbackimg.length;
                    }
                });
            },
            onSave(){
                var _this=this;
                var textareaText=_this.textareaText;
                var feedbackText=_this.feedbackText;
                if (textareaText==""){
                    mui.toast('意见内容不能为空！');
                    return false;
                }
                if (feedbackText == "") {
                    mui.toast('联系方式不能为空！');
                    return false;
                }
                //添加意见反馈数据
                var parameter = { ambitus_suggest: textareaText, contact_way: feedbackText,client_side_type: 2};
                ajax('surroundingAjax/addSuggest',parameter,function(res){
                    if (res.success){
                        var _id = res.id;
                        var _data = new FormData();
                        var feedbackimg=_this.feedbackimg;
                        for(var i in feedbackimg){
                            _data.append('file', feedbackimg[i].file);
                            $.ajax({
                                url:DOMAINNAME+'agentapi/surroundingAjax/uploadSuggestImg?id='+_id,
                                type:'POST',
                                data:_data,
                                cache: false,
                                contentType: false,    //不可缺
                                processData: false    //不可缺
                            });
                        }
                        mui.toast('提交成功！');
                        _this.feedbackimg=[];
                        _this.textareaText="";
                        _this.feedbackText="";
                        _this.setFeedbackWidth();
                    }else{
                        mui.toast(res.message);
                    }
                });
            }
        }
    })
</script>
