<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="maximum-scale=1.0,minimum-scale=1.0,user-scalable=0,width=device-width,initial-scale=1.0"/>
		<title>登录</title>
		<link rel="stylesheet" href="../../common/vant/index.css"/>
		<link rel="stylesheet" href="../../common/css/public.css?v=1.18"/>
		<link rel="stylesheet" href="../../static/css/my/login.css?v=1.18"/>
		<style>
			
		</style>
	</head>
	<body>
		<div id="app" v-cloak ref="DOM">
			<top-bar 
				type="1" 
				icon="iconjiantou11"
				:icon-style="{
					width: '.7rem',
					fontSize: '.4rem',
					color: '#000',
					margin: '.6rem 0 .1rem .32rem'
				}"
			></top-bar>
			<div class="login">
				<h4 class="login-title">
					手机快捷登录
				</h4>
				<span class="login-tip">
					未注册的手机号将自动创建九房账号
				</span>
				
				<van-form @submit="onSubmit">
					<van-field
					  v-model="mobile"
					  type="tel"
					  center
					  clearable
					  maxlength="11"
					  name="mobile"
					  placeholder="请输入手机号"

					>
						<!--					  :rules="[{ required: true, message: '请填写手机号' }]"-->
						<template #button>
							<van-button 
								plain 
								size="small" 
								type="primary"
								native-type="button"
								:class="[ !msgDisabled ? 'msg-btn-active' : '' ]"
								:disabled="msgDisabled"
								 @click="getMsg"
							 >
								{{ msgText }}
							 </van-button>
						</template>
					</van-field>
					
					<van-field
						v-model="code"
						type="digit"
						center
						clearable
						name="code"
						maxlength="6"
						placeholder="请输入验证码"

					/></van-field>
					<!--						:rules="[{ required: true, message: '请填写验证码' }]"-->
					
					<div class="submit">
						<van-button block type="info" native-type="submit">登录</van-button>
					</div>
				</van-form>
				<div class="login-text">
					登录即代表您同意<span @click="goPage('protocol/index.html?type=0')">《九房隐私协议》</span>及<span @click="goPage('protocol/index.html?type=1')">《九房使用协议》</span>
				</div>
			</div>
			<div id="container-user-site"></div>
		</div>
	</body>
</html>

<script src="../../common/js/vue.js" type="text/javascript" charset="utf-8"></script>
<script src="../../common/js/rem.js" type="text/javascript" charset="utf-8"></script>
<script src="../../common/js/public.js?v=1.18" type="text/javascript" charset="utf-8"></script>
<script src="../../common/vant/index.js" type="text/javascript" charset="utf-8"></script>
<script src="../../common/js/fastclick.js" type="text/ja" charsevascriptt="utf-8"></script>
<script type="text/javascript" src="https://webapi.amap.com/maps?v=2.0&key=53da8183ca23918f2f81c79a5b2ede15&plugin=AMap.Geocoder"></script>
<script type="module">
	import { http, loginMixin } from '../../common/js/method/http.js?v=1.18';
	
	Vue.use(http);
	const myComponents = [
		'../../components/common/topBar/index',
	];
	 
	$api.addComponents(myComponents)
		.then(()=>{
			Vue.use(vant.Lazyload);
			
			const app = new Vue({
				el: '#app',
				data: {
					// mobile: '',
					// code: '',
					msgText: '获取验证码',
					msgDisabled: false,
					city_no:'350500'
				},
				components: {
					topBar,
				},
				mixins: [loginMixin],
				created() {
					// console.log(this.$http.request())
				},
				mounted() {
				
				},
				methods:{
					goPage:$api.goPage,
					onSubmit(values) {
					//console.log('submit', values);
					// this.$http.mobileLogin({
						//   'mobile': values.mobile,
						//   'code' : values.code
					// })
						if(!values.mobile){
							this.$toast('请输入手机号');

							return false;
						}else{
							this.mobile = values.mobile;
						}
						if(!values.code){
							this.$toast('请输入验证码');
							return false;
						}else{
							this.code = values.code;
						}
						
						const url = this.$api.localGet('pre-page');
						this.$api.localDel('pre-page');
						
						if(url){
							this.mobileLogin(2,url);
						}else{
							this.mobileLogin(1);
						}
					},

					sendCode(){
					
					this.$http.ajax({
							method: 'POST',
							url: '/index/public/sendMsg',
							data: {'phone':this.mobile},
						}).then( res=>{
						this.$toast(res.data)
						}).catch( res=>{
						this.$toast(res.data)
						})
					},

					getMsg() {
						this.msgDisabled = true;
						this.msgText = 60;
						this.sendCode()
						console.log(this.mobile);
						setInterval(()=>{
							if( this.msgText != 1 && this.msgDisabled){
								this.msgText -= 1;
							} else {
								this.msgDisabled = false;
								console.log(this.msgText)
								let lab = this.msgText
								this.msgText = '重新发送';
							}
						},1000)
					}
					
				},
			})
	
		})
	
	
</script>