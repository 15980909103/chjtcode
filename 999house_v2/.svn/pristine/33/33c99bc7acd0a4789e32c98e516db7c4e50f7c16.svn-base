<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="maximum-scale=1.0,minimum-scale=1.0,user-scalable=0,width=device-width,initial-scale=1.0" />
		<title>新房</title>
		<link rel="stylesheet" href="../../common/vant/index.css" />
		<link rel="stylesheet" href="../../common/css/public.css?v=1.19" />
		<link rel="stylesheet" href="../../static/css/new_house/index.css?v=1.19" />
		<style>
			.drops{
			      position: sticky;
			      top: 0;
			      background-color: #fff;
			      z-index: 8;
		   }
		</style>
	</head>
	<body>
		<div id="app" v-cloak ref="DOM">
			<div class="search" v-if="flag">
				<top-bar type="1" title="新房" :icon-style="{
					width: '1rem',
					fontSize: '.5rem',
					color: 'rgba(173, 173, 173, 1)',
					marginLeft: '-.3rem'
				}">
				</top-bar>
				<!-- <van-search class="search-box" disabled placeholder="请输入搜索关键词" @click="goPage('index/search.html',{ type: 3 })"></van-search> -->
				<!-- <span class="search-map" @click="goPage('map/index.html')">地图</span> -->
				<!-- <div class="search-tip" :data-badge="badge">
					<span class="iconfont iconxiaoxi-4"></span>
				</div> -->
			</div>

			<!-- <div class="box" v-if="boxList.length > 0">
				<div class="box-wrap" v-for="(item,index) in boxList" :key="index">
					<div class="box-item" @click="goActive(item.href)">
						<span class="box-title">{{ item.title }}</span>
						<div class="box-img-wrap">
							<template v-for="(img,key) in item.img">
								<img :src="$http.imgDirtoUrl(img)" :key="key" v-if="key<1">
							</template>
						</div>
					</div>
				</div>
			</div> -->
			<div :class="flag?'drop':'drops'">
				<common-sizer @result="chooseResult" :default_data='default_data' :more-data="moreData"></common-sizer>

				<common-tag :list="tipList" margin-right=".3rem" @change="chooseTip" v-if="flag" start="1"></common-tag>
			</div>

			<van-list v-model="loading" :finished="finished" finished-text="没有更多了" @load="onLoad">
				<common-template :list="list" @del="(e)=>{ list = e  }"></common-template>
			</van-list>
			<div id="container-user-site"></div>
		</div>
	</body>
</html>

<script src="../../common/js/vue.js" type="text/javascript" charset="utf-8"></script>
<script src="../../common/js/rem.js" type="text/javascript" charset="utf-8"></script>
<script src="../../common/js/public.js?v=1.19" type="text/javascript" charset="utf-8"></script>
<script src="../../common/vant/index.js" type="text/javascript" charset="utf-8"></script>
<script src="../../common/js/fastclick.js" type="text/javascript" charset="utf-8"></script>
<script type="text/javascript" src="https://webapi.amap.com/maps?v=2.0&key=53da8183ca23918f2f81c79a5b2ede15&plugin=AMap.Geocoder"></script>
<script type="module">
	import { http, loginMixin } from '../../common/js/method/http.js?v=1.19';
	
	const myComponents = [
		'../../components/common/tag/index',
		'../../components/common/area/index',
		'../../components/common/sizer/index',
		'../../components/common/topBar/index',
		'../../components/common/template/index',
	];
	
	$api.addComponents(myComponents)
		.then(()=>{
			
			Vue.use(http);
			Vue.use(vant.Lazyload);
			Vue.component('commonArea', commonArea);
			 
			const app = new Vue({
				el: '#app',
				data: {
					badge: 20,
					boxList: [],
					city_no: 0,
					option: [
						{ text: '全部商品', value: 0 },
						{ text: '新款商品', value: 1 },
						{ text: '活动商品', value: 2 },
					],
					tabChoose: {},
					// 外部筛选
					tipChoose: -1,
					tipList: [
						{
							id: 0,
							name: '在售'
						},
						{
							id: 1,
							name: '本月开盘'
						},
						{
							id: 3,
							name: '近期开盘'
						},
					],
					// 数据
					list: [],
					loading: true,
					finished: false,
					page: 0,
					maxPage: 1,
					flag:true,
					// 筛选数据
					default_data:{},
					moreData: {},
				},
				provide () {
				    return {
				      default_data: this.default_data
				    }
				  },
				components: {
					topBar,
					commonTag,
					commonSizer,
					commonTemplate
				},
				mixins: [loginMixin],
				created() {
					this.$api.localDel('pre-page');
				
					if( this.$api.funcUrlDel().option && this.$api.funcUrlDel().option.more_type && this.$api.funcUrlDel().option.more_tag){
						this.moreData = {
							type: this.$api.funcUrlDel().option.more_type,
							id: this.$api.funcUrlDel().option.more_tag
						}
						
						// console.log(this.moreData)
					}
					
					this.$http.getCurrentCity().then( data=>{
						this.city_no = data.city_no;
						this.getHouseActivty();
						
					})
					
					if( this.$api.funcUrlDel().option && this.$api.funcUrlDel().option.id){
						this.flag = false
						this.tabChoose.area_no = this.$api.funcUrlDel().option.id
						this.default_data.site_center = {
							pid:this.$api.funcUrlDel().option.id,
							type:'area',
							district: this.$api.funcUrlDel().option.district
						}
					}
					
					// this.$nextTick(()=>{
					// 	this.$refs.DOM.scrollTo(0,3500)
					// })
				},
				methods:{
					init() {
						this.list = [];
						this.loading = true;
						this.finished = false;
						this.page = 0;
						this.maxPage = 1;
					},
					getHouseActivty() {
						this.$http.ajax({
							url: '/index/adv/getAdvByFlag',
							data: {
								falg: 'h5_home_estates',
								city_no: this.city_no,
								limit: 999
							}
						}).then( res=>{
							const data = res.data;
							
							// console.log(res)
							// console.log(data)
							this.boxList = data;
							
							if( ( !this.$api.funcUrlDel().option ) || (this.$api.funcUrlDel().option && !this.$api.funcUrlDel().option.more_type && !this.$api.funcUrlDel().option.more_tag) ){
								this.onLoad();
							}
						}).catch(res=>{
							console.log(res)
							if( typeof res == 'object' ){
								this.$toast(res.msg);
							}
							this.onLoad();
						})
					},
					onLoad() {
						if( this.page >= this.maxPage ) {
							this.loading = false;
							this.finished = true;
							return;
						}
						
						let page = this.page;
						
						page++;
						
						let data = {
							city_no: this.city_no,
							page_size: 6,
							page: page
						};
						
						data = { ...data, ...this.tabChoose };
						
						if( this.tipChoose != -1 ){
							data.cond = Number(this.tipChoose) + 1;
						}
						
						// console.log(data)
						
						this.$http.ajax({
							url: '/index/estates/getEstatesList',
							data: data
						}).then( res=>{
							const data = res.data;
							let arr = [];
							
							this.maxPage = data.last_page;
							this.page = data.current_page;

							arr = this.$api.createHouseList( data, 1 ); 
							
							this.list = [...this.list, ...arr];
							
							if( this.page >= this.maxPage ) {
								this.finished = true;
							}
							
							this.loading = false;
						})
					},
					chooseResult(e) {
						const result = e;
						const obj = {};
					
						for( let i in result ){
							switch( i ){
								case 'site':
									if( result[i] && result[i].length > 0 && result[i] != 0 ){
										if( result.siteCenter.type != 'subway' ){
											if( typeof result[i] != 'object' ){
												obj.area_no = result[i];
											} else {
												obj.business_no = result[i];
											}
										} else {
											if( typeof result[i] != 'object' ){
												obj.subway = Number(result[i]);
											} else {
												obj.subway = result.siteCenter.pid;
												obj.sites = result[i];
											}
										}
									};
									break;
									
								case 'price':
									if( !Array.isArray(result[i]) ){
										obj.price_type = result[i].type;
										obj.price = result[i].val;
									}
									break;
								case 'type':
									if( result[i] != 0 ){
										obj.rooms = result[i];
									}
									break;
								case 'more':
									const more = result[i];
									for( let k in more ) {
										if( more[k] && more[k].length > 0 ){
											obj[k] = more[k];
										}
									}
									break;
							}
						}
						// console.log(obj)
						// return;
						this.tabChoose = obj;
						
						this.init();
						this.onLoad();
					},
					chooseTip(index) {
						if( index == this.tipChoose ){
							this.tipChoose = -1;
						} else {
							this.tipChoose = index;
						}
						// console.log(this.tipChoose)
						this.init();
						this.onLoad();
					},
					goPage( url, data ) {
						if( url == 'index/search.html' ){
							this.$api.localSet('pre-page', window.location.href)
						}
						
						this.$api.goPage(url,data);
					},
					goActive(href) {
						if(!$api.trim(href)){
							return
						}
						this.$api.goPage(href);
					},
				},
			})
			
		})
	
</script>
