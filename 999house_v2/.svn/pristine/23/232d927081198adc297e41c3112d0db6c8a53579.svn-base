<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="maximum-scale=1.0,minimum-scale=1.0,user-scalable=0,width=device-width,initial-scale=1.0"/>
		<title></title>
		<link rel="stylesheet" href="../../common/vant/index.css"/>
		<link rel="stylesheet" href="../../common/css/public.css?v=1.12"/>
		<link rel="stylesheet" href="../../static/css/houses/loan_result.css?v=1.12"/>
		<style>
			
			
		</style>
	</head>
	<body>
		<div id="app" v-cloak ref="DOM">
			<top-bar :title="myTitle" ></top-bar>
			<div class="card">
				<van-tabs type="card" v-model="active" class="card-wrap" :class="[ active == 0 ? 'tab2' : 'tab' ]">
					<van-tab class="card-content" v-for="(item,index) in cardList" :key="index" :title="item.name">
						
						<span class="card-title">
							{{ index == 0 ? '每月' : '首月' }}月供参考(元)
						</span>
						<h4 class="card-price">
							{{ item.refund }}
						</h4>
						<div class="card-box">
							<div>
								<span>贷款总额(万元)</span>
								<span class="card-item">
									{{ item.loans }}万
								</span>
							</div>
							<div>
								<span>利息总额(万元)</span>
								<span class="card-item">
									{{ item.interest }}万
								</span>
							</div>
							<div>
								<span>贷款年限</span>
								<span class="card-item">
									{{ item.year }}年
								</span>
							</div>
						</div>
						<van-button type="default">重新计算</van-button>
					</van-tab>
				</van-tabs>
				
				<span class="item-title">
					<span>{{ active == 0 ? '每月还款金额不变' : `每月还款金额递减${cardList[1].reduce}元` }}</span>
					，其中还款的本金{{ active == 0 ? '不变' : '逐月递增' }}，利息逐月递减，计算结果仅供参考。
				</span>
			</div>
			<div class="due-box" :class="[ type == 2 ? 'due-box2' : '' ]">
				<div class="due due-title due-color">
					<span class="due-year">期数</span>
					<template  v-if="type != 2">
						<span class="due-item">月供总额</span>
						<span class="due-item">月供本金</span>
						<span class="due-item">月供利息</span>
						<span class="due-all">剩余本金</span>
					</template>
					<template v-else>
						<span class="due-group">总还款金额</span>
						<span class="due-group">商贷还款</span>
						<span class="due-group">公积金还款</span>
					</template>
				</div>
				<template v-for="(item,index) in cardList[active].list">
					<div class="due" :class="[ index%2 == 1 ? 'due-color' : '' ]" :key="index">
						<span class="due-year">{{ index+1 }}</span>
						<template  v-if="type != 2">
							<span class="due-item">{{ item.submit }}</span>
							<span class="due-item">{{ item.principal }}</span>
							<span class="due-item">{{ item.interest }}</span>
							<span class="due-all">{{ item.surplus }}</span>
						</template>
						<template v-else>
							<span class="due-group">{{ item.due }}</span>
							<span class="due-group">{{ item.trade }}</span>
							<span class="due-group">{{ item.fund }}</span>
						</template>
					</div>
				</template>
			</div>
			<!-- <div class="adviser">
				<div class="adviser-info">
					<img :src="adviser.head">
					<div>
						<span class="adviser-name">{{ adviser.name }}</span>
						<span class="adviser-tip">职业顾问</span>
					</div>
				</div>
				<van-button type="default" color="linear-gradient(90deg, #B7C881 0%, #87B673 100%)" @click="findAdviser">在线问</van-button>
				<a :href="'tel:' + adviser.phone">
					<van-button type="default" color="linear-gradient(90deg, #FFA640 0%, #FE8D35 100%)">打电话</van-button>
				</a>
			</div> -->
			<div id="container-user-site"></div>
		</div>
	</body>
</html>

<script src="../../common/js/vue.js" type="text/javascript" charset="utf-8"></script>
<script src="../../common/js/rem.js" type="text/javascript" charset="utf-8"></script>
<script src="../../common/js/public.js?v=1.15" type="text/javascript" charset="utf-8"></script>
<script src="../../common/vant/index.js" type="text/javascript" charset="utf-8"></script>
<script src="../../common/js/fastclick.js" type="text/javascript" charset="utf-8"></script>
<script type="text/javascript" src="https://webapi.amap.com/maps?v=2.0&key=53da8183ca23918f2f81c79a5b2ede15&plugin=AMap.Geocoder"></script>
<script type="module">
	import { http, loginMixin } from '../../common/js/method/http.js?v=1.1';
	
	Vue.use(http);
	Vue.use(vant.Lazyload);
	
	const myComponents = [
		'../../components/common/topBar/index',
	];
	
	
	$api.addComponents(myComponents)
		.then(()=>{
			const app = new Vue({
				el: '#app',
				data: {
					type: 0,
					active: 0,
					cardList: [
						{
							name: '等额本息',
							refund: 0,
							loans: 0,
							interest: 0,
							year: 0,
							list: []
						},
						{
							name: '等额本金',
							refund: 0,
							loans: 0,
							interest: 0,
							year: 0,
							reduce: 0,
							list: []
						}
					],
					adviser: {
						id: 998,
						name: '佳佳',
						head: '/9house/static/logo.png',
						phone: 18850288888
					},
					myTitle: ''
					
				},
				components: {
					topBar,
				},
				mixins: [loginMixin],
				created() {
					this.init();
				},
				mounted() {
			
				},
				methods:{
					init() {
						const option = this.$api.localGet('loan');
						this.myTitle = option.title;
						this.setTitle(option.title);
						this.setResult(option);
					},
					setResult( option ) {
						
						const data = option.data;
						const info = option.info;
						let arr = [];
						
						
						if( option.title == '组合贷款' ){
							const data1 = option.data1;
							
							arr = this.computeLoan3(data, data1, info);
							
							// console.log(arr)
						} else {
							arr.push(this.computeLoan(data[0],info));
							arr.push(this.computeLoan2(data[1],info));
						}
						
						
						
						this.cardList = arr;
					},
					// 等额本息
					computeLoan(data,info) {
						let money = info.money * 10000; // 贷款总金额
						const rate = info.rate / 12 / 100; // 贷款比例
						const month = info.year * 12; // 月份数量
						const rateAll = Math.pow((rate+1),month); //共还款比例
						const arr =[];
						const surplus = [];
						let moneyNow = 0,
						    obj;
							
							obj = {
								name: '等额本息',
								refund: data[0],
								loans: info.money,
								interest: (data[2]/10000).toFixed(2),
								year: info.year,
								list: []
							}
						
						
						for( let i=1; i<Number(data[1])+1; i++ ){
							const rateDec = Math.pow((rate+1),(month-i));
							const interest = money*rate*(rateAll-rateDec)/(rateAll-1)
							const principal = (data[0] - interest).toFixed(2);
							let mySurplus = 0;
							
							moneyNow = Number(moneyNow) + Number(principal);
							moneyNow = moneyNow.toFixed(2);
							
							surplus.push(moneyNow);
							
							if( i-2 >= 0 ){
								mySurplus = surplus[i-2];
							}
							
							let newObj = {
								submit: data[0],
								principal: principal,
								interest: interest.toFixed(2),
								surplus: mySurplus,
							}
							
							arr.unshift(newObj)
						}
						
						obj.list = arr;
						
						return obj;
					},
					// 等额本金
					computeLoan2(data,info) {
						let obj;
						const arr = [];
						const myMoney = ((info.money*10000)/(info.year*12)).toFixed(2);
						
						obj = {
							name: '等额本金',
							refund: data[0],
							loans: info.money,
							interest: (data[3]/10000).toFixed(2),
							year: info.year,
							reduce: data[2],
							list: []
						}
						
						for( let i= data[1]; i>0; i--){
							const submit =  (data[0] - (Math.abs(i-data[1]))*data[2]).toFixed(2);
							
							let newObj = {
								submit: submit,
								principal: myMoney,
								interest: (submit-myMoney).toFixed(2),
								surplus: (myMoney*(i-1)).toFixed(2),
							}
							
							arr.push(newObj)
						}
						
						obj.list = arr;
						
						return obj;
					},
					//  组合贷款
					computeLoan3(data,data1,info){
						console.log(data)
						console.log(data1)
						console.log(info)
						let obj,
							obj1;
						const arr = [];
						const year = [info.year, info.year1].reduce((num1, num2) => {
							return num1 > num2 ? num1 : num2;
						});
						const fundMonth = info.year*12;
						const tradeMonth = info.year1*12;
						
						obj = {
							name: '等额本息',
							refund: (Number(data[0][0])+Number(data1[0][0])).toFixed(2),
							loans: (Number(info.fundMoney)+Number(info.tradeMoney)).toFixed(2),
							interest: (Number(data[0][2])/10000+Number(data1[0][2])/10000).toFixed(2),
							year: year,
							list: []
						}
						
						obj1 = {
							name: '等额本金',
							refund: (Number(data[1][0])+Number(data1[1][0])).toFixed(2),
							loans: (Number(info.fundMoney)+Number(info.tradeMoney)).toFixed(2),
							interest: (Number(data[1][3])/10000+Number(data1[1][3])/10000).toFixed(2),
							year: year,
							reduce: (Number(data[1][2])+Number(data1[1][2])).toFixed(2),
							list: []
						}
			
						for( let i=0; i<year*12; i++ ){
								const trade = tradeMonth > i ? Number(data1[0][0]) : 0;
								const fund = fundMonth > i ? Number(data[0][0]) : 0;
								let trade1 =  Number(data1[1][0]),
									fund1 = Number(data[1][0]);
									
								if( i > 0 ){
									trade1 = tradeMonth > i ? trade1 - Number(data1[1][2])*i : 0;
									fund1 = fundMonth > i ? fund1 - Number(data[1][2])*i : 0;
								}
							
								let newObj = {
									due: (trade+fund).toFixed(2),
									trade: trade,
									fund: fund
								}
								
								let newObj1 = {
									due: (trade1+fund1).toFixed(2),
									trade: trade1.toFixed(2),
									fund: fund1.toFixed(2)
								}
								
								obj.list.push(newObj);
								obj1.list.push(newObj1);
						}
						
						arr.push(obj);
						arr.push(obj1);
						
						return arr
					},
					setTitle(title) {
						document.title = title;
						
						if( title == '组合贷款' ){
							this.type = 2;
						}
					},
					findAdviser() {
						console.log(this.adviser.id)
					}
				},
			})
		})
</script>