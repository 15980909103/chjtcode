<template>
	<view>
		<div class="reply_wrap">
			<u-popup v-model="showThat" mode="bottom">
				<div class="reply_box">
					<div class="reply_top">
						<h4>相关留言</h4>
						<span class="reply_close" @click="close">取消</span>
					</div>
					<discover-reply v-if="list.length" :list="list" @like="likeSome" @reply="replySome"></discover-reply>
					<div class="reply_box-no-text" v-else>暂无数据</div>
				</div>
			</u-popup>
			<transition name="u-slide-up">
				<div class="reply_input" v-show="navShow || showThat">
					<u-form @submit="onSubmit" ref ="tesxfrom">
						<u-input class="reply_input_item" 
							v-model="text" 
							maxlength="300"
							:placeholder="pltesxt" ></u-input>
						<!-- <u-field
							name="val"
							class="reply_input_item" 
							v-model="text" 
							maxlength="300"
							:placeholder="pltesxt" 
							ref="field"
							@input="inputClick"
							@blur="inputBlur"
							@click='inputFocus'
							:readonly='read_only'>
						</u-field> -->
					</u-form>
					<common-like
						v-if="!sendBtn"
						:itemid="id" 
						:num="favorite" 
						type="0" 
						:state="content.likeStatus"
						padding=".2rem 0 0 .5rem"
						@like="likeSome"
					>
					</common-like>
					<div class="reply_icon" v-if="!sendBtn">
						<span @click="addFollow" class="reply_icon_wrap"><i class="iconfont" :class=" like == 0 ? 'iconbianzu1' : 'iconguanzhu  text-active' "></i></span>
						<span class="reply_icon_wrap" @click="goShare"><i class="iconfont iconfenxiang2"></i></span>
					</div>
					<div class="reply_icon" v-if="sendBtn">
						<button class='reply_send' @click='onSubmit'>发送</button>
					</div>
				</div>
			</transition>
			
		</div>
	</view>
</template>

<script>
	import commonLike from '../common/like'
	import discoverReply from './reply.vue'
	export default {
		data() {
			return {
				showThat: false,
				text: '',
				replyId: 0,
				pltesxt:'我来说两句',
				like: 0,
				sendBtn: false,
				read_only: false,
				user_id: 0,
			};
		},
		props: {
			show: {
				type: [Boolean],
				default() {
					return false
				}
			},
			list: {
				type: [Array],
				default() {
					return []
				}
			},
			id: {
				type: [Number,String],
				default() {
					return -1
				}
			},
			userid: {
				type: [Number,String],
				default() {
					return -1
				}
			},
			pid:{
				type: [Number,String],
				default() {
					return -1
				}
			},
			cate_id:{
				type: [Number,String],
				default() {
					return -1
				}
			},
			favorite: {
				type: [Number,String],
				default() {
					return 0
				}
			},
			// 资讯 9 视频 13
			column:{
				type: [Number,String],
				default() {
					return 9
				}
			},
			navShow: {
				type: Boolean,
				default() {
					return true
				}
			},
			showSend: {
				type: Boolean,
				default() {
					return false
				}
			}
		},
		watch: {
			show(val){
				this.showThat = val;
			},
			showThat(val){
				if( val == false ){
					this.close();
				}
			},
			favorite( val ){
				this.like = val;
			},
			showSend( val ){
				this.sendBtn = val;
			},
			text(val){
				if(val){
					if(!this.isLogin()){
						return this.sendBtn = false;
					}
					this.sendBtn = true
				}else{
					this.replyId = 0;
					this.sendBtn = false
					this.pltesxt  = '我来说两句';
				}
			}
		},
		components:{
			commonLike,
			discoverReply
		},
		created() {
			let userInfo = this.$api.localStore.localGet('user_info');
			if(userInfo&&userInfo.user_id){
				this.user_id = userInfo.user_id; 
			}
			this.like = this.favorite;
			this.sendBtn = this.showSend;
		},
		methods: {
			close() {
				this.$emit('close');
			},
			inputClick() {
				if(!this.isLogin()){
					return this.sendBtn = false;
				}
				if( this.showSend == false && this.text.length != 0 ){
					this.sendBtn = true;
				}
			},
			// 回复某条
			replySome( item ) {
				this.text = '';
				this.replyId = item.id;
				// this.$refs.field.focus();
				this.pltesxt  = '@'+item.name
			},
			inputBlur() {
				this.pltesxt  = '我来说两句';
			},
			inputFocus(){
				if( !this.isLogin()){
					this.read_only = true;
					this.$http.hrefMobileLogin();
					return;
				}else{
					this.read_only = false;
				}
			},
			addFollow(){
				if( !this.isLogin()){
					this.$http.hrefMobileLogin();
					return;
				}
				let _this = this;

				this.$http.post(
					'/news/addFollow',
					{
						pid: this.pid,
						cate_id: this.cate_id,
						id: this.userid,
					},
				).then(res=>{
					if(res.code == 1){
						if(res.code == 1){
							this.like = Number(res.data.is_follow);
							this.$toast(this.like==1?'关注成功':'取消关注');
						}else{
							this.$toast(res.msg);
						}
					}
				});
			},
			onSubmit() {
				let text = this.text;
				text = this.$api.trim(text);
				text = this.$api.htmlEscape(text);
				const obj = {
					id: this.userid,
					text: text,
					column_id: this.column
				};
				
				if( this.$api.isEmpty(text) ){
					this.$toast('输入不能为空');
				} else {
					if( this.replyId != 0 ){
						obj.pid = this.replyId;
					} else {
						obj.pid = 0;
					}

					this.sendSome(obj);
				}
			},
			sendSome( option ) {
				if( !this.isLogin()){
					this.$http.hrefMobileLogin();
					return;
				}
				
				// option.cate_id = this.$http.getUrlParamValue('cate_id');
				option.cate_id =this.cate_id
				// console.log(option);

				let _this = this;
							
				this.$http.post(
					'/comment/newsComment',
					option,
				).then(res=>{
					if(res.code==1){
						this.$toast('评论成功');
						this.text = '';
						this.replyId = 0;
						option.new_id = res.data.id;
						option.user_id = this.user_id;
						
						this.initSendInfo(option);
					}else{
						this.$toast('评论失败');
					}
				}).catch(()=>{
					this.$toast('评论失败');
				});
			},
			initSendInfo(option) {
				const info = this.$api.localStore.localGet('user_info');
				const time = this.$api.timeFormat(Date.parse(new Date()),'mm-dd hh:MM');
				const id = Number(option.new_id);
				// console.log(info);
				// return
				const obj = {
					id: id,
					content: option.text,
					head: (info && info.user_avatar) ? info.user_avatar : '../../static/my/touxiang.png',
					name: (info &&  info.user_name) ? info.user_name : '手机用户',
					lik: 0,
					num: 0,
					pid: 0,
					reply: [],
					time: time,
					user_id: option.user_id ? option.user_id : 0
				};
				
				const newOption = {
					option: option,
					obj: obj
				}
				
				this.$emit('send', newOption);
			},
			likeSome( e ) {
				console.log(e,'like');
				this.$emit('like', e);
			},
			goShare() {
				// if(this.userid== -1 || this.cate_id == -1 || this.pid== -1){
				// 	this.$toast('参数缺失');
				// 	return ;
				// }

				this.goPage('padiscover/share', { id: this.userid,pid:this.pid,cate_id:this.cate_id });
			}
		}
	}
</script>

<style lang="scss">
/* pop */
.reply_wrap{
	width: 100vw;
	position: fixed;
	bottom: 0;
	z-index: 10;
}

.reply_input{
	width: 100%;
	height: 110rpx;
	background-color: rgba(255, 255, 255, 1);
	box-shadow: 0 -2rpx 10rpx 0px #F5F5F5;
	display: flex;
	align-items: center;
	position: absolute;
	left: 0;
	bottom: 0;
	z-index: 10075;
}

.reply_input_item{
	width: 350rpx;
	height: 68rpx;
	margin-left: 18rpx;
	padding: 0 18rpx;
	display: flex;
	align-items: center;
	border-radius: 34rpx;
	border: 1px solid #E6E6E6;
}
.reply_input_item .u-label{
	width: 0 !important;
}
.reply_icon{
	height: 100%;
	flex: 1;
	display: flex;
	justify-content: center;
	align-items: center;
}

.reply_icon_wrap{
	height: 100%;
	flex: 1;
	display: flex;
	justify-content: center;
	align-items: center;
}

.reply_wrap .u-popup.u-popup--bottom{
	border-radius: 20rpx 20rpx 0 0;
}

.reply_box{
	height: 1020rpx;
	box-sizing: border-box;
	padding: 130rpx 32rpx 140rpx;
	border-radius: 20rpx 20rpx 0 0;
	overflow-y: scroll;
	-webkit-overflow-scrolling: touch;
}

.reply_top{
	width: 100%;
	display: flex;
	justify-content: space-between;
	align-items: center;
	position: absolute;
	left: 0;
	top: 0;
	background-color: #fff;
	z-index: 2;
	box-sizing: border-box;
	padding-left: 32rpx;
	border-bottom: 1rpx solid rgba(224, 224, 224, 1);
}

.reply_close{
	padding: 34rpx 32rpx 28rpx;
}

.reply_send{
	height: 68rpx;
	width: 160rpx;
	// padding-left: 15px;
	background-color: rgba(254, 130, 30, 1);
	color: #fff;
	line-height: 68rpx;
	text-align: center;
}
.reply_box-no-text{
	text-align: center;
	width: 100%;
	margin-top: 50px;
}
</style>
